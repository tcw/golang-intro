Praktisk introduksjon til GO

Knowit Sør 

Tom Christian Woods

 
* Hva skal vi se på?

- Introduksjon
- Installasjon
- Tooling (GO kommandoen)
- Språket
- Communicating Sequential Processes
- Generell bruk (Bruke/skrive Biblioteker, Testing og Web tjenester) 
- Konklusjon

* Introduksjon

- Hvem har laget det?
- Hvorfor ble GO laget?
- Hvilken type språk er GO?
- Hvorfor er ikke GO mer likt 'Haskell'?
- Hvem bruker GO idag?

* Installasjon

.link http://golang.org/ GO hjemmeside

Last ned og kjør:

 sudo tar -C /usr/local -xzf go1.4.2.linux-amd64.tar.gz


Lager GOPATH under $HOME/Go:

 mkdir Go
 cd Go
 mkdir src
 mkdir pkg
 mkdir bin

Eksporter:

 export GOROOT=/usr/local/go
 export GOPATH=$HOME/Go
 export GOBIN=$GOPATH/bin
 export PATH=$PATH:$GOROOT/bin:GOBIN


* Tooling

Hva kan go kommandoen gjøre?

- Kjøre en fil (*go*run*fil.go*)
- Bygge en fil (*go*build*fil.go*)
- Installere en fil (*go*install*fil.go*) som mvn install
- Hente et biblitek fra ekstern kilde (*go*get*http://github.com/tcw/go-prog*)
- Kjøre tester (*go*test*fil_test.go*)
- Kjøre benchmarking (*go*test*-bench=.*fil_test.go*)
- Kjøre profiling (*go*tool*pprof*fil*cpu.pprof*)


* Språket - Hello world!
.play -numbers hello.go

* Språket - Global variabel
.play -numbers global_variabel.go

* Språket - Type inference
.play -numbers type_inference.go /^func main/,/^}/

* Språket - Ny tildeling
.play -numbers reassignment.go /^func main/,/^}/

* Språket - Konstanter
.play -numbers constant.go

* Språket - Init
.play -numbers init.go

* Språket - Array
.play -numbers array.go /^func main/,/^}/

* Språket - Slice
.play -numbers slice.go /^func main/,/^}/

* Språket - If Else
.play -numbers if.go /^func main/,/^}/

* Språket - Looping
.play -numbers for.go /^func main/,/^}/

* Språket - Looping
.play -numbers for2.go /^func main/,/^}/

* Språket - Funksjoner
.play -numbers fn1.go

* Språket - Funksjoner
.play -numbers fn2.go

* Språket - Funksjoner
.play -numbers fn3.go

* Språket - Metoder
.play -numbers method.go

* Språket - Interface
.play -numbers interface.go


* Communicating Sequential Processes (CSP)

